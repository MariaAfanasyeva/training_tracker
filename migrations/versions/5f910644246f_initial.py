"""initial

Revision ID: 5f910644246f
Revises:
Create Date: 2022-08-09 22:13:28.070612

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "5f910644246f"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("exercise")
    op.drop_table("training")
    op.drop_table("distance")
    op.drop_table("set")
    op.drop_table("weight")
    op.drop_table("group")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "group",
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text("nextval('group_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("name", sa.VARCHAR(length=255), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="group_pkey"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "weight",
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text("nextval('weight_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column(
            "weight",
            sa.NUMERIC(precision=10, scale=2),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("units", sa.VARCHAR(length=100), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="weight_pkey"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "set",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("exercise_count", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("exercise_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("training_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("distance_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("weight_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(["distance_id"], ["distance.id"], name="set_distance_id_fkey"),
        sa.ForeignKeyConstraint(["exercise_id"], ["exercise.id"], name="set_exercise_id_fkey"),
        sa.ForeignKeyConstraint(["training_id"], ["training.id"], name="set_training_id_fkey"),
        sa.ForeignKeyConstraint(["weight_id"], ["weight.id"], name="set_weight_id_fkey"),
        sa.PrimaryKeyConstraint("id", name="set_pkey"),
    )
    op.create_table(
        "distance",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "distance",
            sa.NUMERIC(precision=10, scale=2),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("units", sa.VARCHAR(length=100), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="distance_pkey"),
    )
    op.create_table(
        "training",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("training_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("status", sa.VARCHAR(length=255), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="training_pkey"),
    )
    op.create_table(
        "exercise",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.VARCHAR(length=255), autoincrement=False, nullable=True),
        sa.Column("group_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(["group_id"], ["group.id"], name="exercise_group_id_fkey"),
        sa.PrimaryKeyConstraint("id", name="exercise_pkey"),
    )
    # ### end Alembic commands ###
